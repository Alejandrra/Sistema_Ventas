const express = require("express");
const { pool } = require("./db"); // Importamos la conexi√≥n a la base de datos
const router = express.Router();

// üìå 1Ô∏è‚É£ Obtener todos los usuarios (GET)
router.get("/usuarios", async (req, res) => {
    try {
        const [rows] = await pool.query("SELECT * FROM Usuarios");
        res.json(rows);
    } catch (error) {
        console.error("‚ùå Error al obtener usuarios:", error);
        res.status(500).json({ error: "Error al obtener usuarios" });
    }
});

// üìå 2Ô∏è‚É£ Agregar un usuario (POST)
router.post("/usuarios", async (req, res) => {
    const { nombre, correo, contrase√±a, rol } = req.body;
    try {
        const [result] = await pool.query(
            "INSERT INTO Usuarios (nombre, correo, contrase√±a, rol) VALUES (?, ?, ?, ?)",
            [nombre, correo, contrase√±a, rol]
        );
        res.json({ message: "‚úÖ Usuario agregado", id: result.insertId });
    } catch (error) {
        console.error("‚ùå Error al agregar usuario:", error);
        res.status(500).json({ error: "Error al agregar usuario" });
    }
});

// üìå 3Ô∏è‚É£ Eliminar un usuario (DELETE)
router.delete("/usuarios/:id", async (req, res) => {
    const { id } = req.params;
    try {
        const [result] = await pool.query("DELETE FROM Usuarios WHERE id = ?", [id]);
        if (result.affectedRows > 0) {
            res.json({ message: "‚úÖ Usuario eliminado" });
        } else {
            res.status(404).json({ error: "Usuario no encontrado" });
        }
    } catch (error) {
        console.error("‚ùå Error al eliminar usuario:", error);
        res.status(500).json({ error: "Error al eliminar usuario" });
    }
});

// üìå 4Ô∏è‚É£ Actualizar un usuario (PUT)
router.put("/usuarios/:id", async (req, res) => {
    const { id } = req.params;
    const { nombre, correo, contrase√±a, rol } = req.body;
    try {
        const [result] = await pool.query(
            "UPDATE Usuarios SET nombre = ?, correo = ?, contrase√±a = ?, rol = ? WHERE id = ?",
            [nombre, correo, contrase√±a, rol, id]
        );
        if (result.affectedRows > 0) {
            res.json({ message: "‚úÖ Usuario actualizado" });
        } else {
            res.status(404).json({ error: "Usuario no encontrado" });
        }
    } catch (error) {
        console.error("‚ùå Error al actualizar usuario:", error);
        res.status(500).json({ error: "Error al actualizar usuario" });
    }
});

module.exports = router;
